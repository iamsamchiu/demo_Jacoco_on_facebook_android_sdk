buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.robolectric:robolectric-gradle-plugin:1.0.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'org.robolectric'
apply plugin: 'jacoco'

android {
    // roboelectric v21 is currently broken for some of our tests
    compileSdkVersion 19
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.facebook.junittests"
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        // roboelectric v21 is currently broken for some of our tests
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    jacoco {
        version "0.7.1.201405082137"
    }
}

dependencies {
    def powerMockVersion = '1.6.1'

    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:19.+'
    compile project(':facebook')

    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.0-rc3'
    testCompile 'org.robolectric:shadows-support-v4:3.0-rc3'

    // PowerMock brings in the mockito dependency
    testCompile "org.powermock:powermock-module-junit4:$powerMockVersion"
    testCompile "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
    testCompile "org.powermock:powermock-classloading-xstream:$powerMockVersion"
    testCompile "org.powermock:powermock-api-mockito:$powerMockVersion"
}

def coverageSourceDirs = [
        'src/main/java'
]

task generateJacocoTestReports(type:JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"
    reports {
        xml.enabled true
        html.enabled true
        html.destination "${buildDir}/reports/jacoco"
        csv.enabled false
    }
    description = "Generate Jacoco Robolectric unit test coverage reports"

    classDirectories = fileTree(
            dir: 'build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    classDirectories += fileTree(
            dir: '../build/intermediates/classes/release',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    sourceDirectories = files(coverageSourceDirs)
    additionalSourceDirs = files(coverageSourceDirs)
    executionData = fileTree(dir: 'build/jacoco', include: ['*.exec'])
}